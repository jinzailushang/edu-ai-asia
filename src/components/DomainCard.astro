---
import type { Domain, Language } from '../types/domain';

interface Props {
  domain: Domain;
  locale: Language;
}

const { domain, locale } = Astro.props;
const content = domain.content[locale];
const translations = await import(`../locales/${locale}/common.json`);
const t = translations.default;

// 状态样式映射
const statusStyles = {
  available: 'bg-green-100 text-green-800',
  sold: 'bg-gray-100 text-gray-800',
  reserved: 'bg-yellow-100 text-yellow-800'
};

const statusText = t.domain.status[domain.status];
---

<div class="group relative bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden hover:-translate-y-2">
  <!-- 推荐标签 -->
  {domain.featured && (
    <div class="absolute top-4 right-4 z-10">
      <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gradient-to-r from-gradient-start to-gradient-end text-white">
        <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
        </svg>
        {t.domain.featured}
      </span>
    </div>
  )}
  
  <a 
    href={`${locale === 'zh' ? '' : '/en'}/domains/${domain.id}`} 
    class="domain-card-link block p-6"
    data-domain={domain.name}
  >
    <!-- 域名名称 -->
    <div class="mb-4">
      <h3 class="text-2xl font-bold text-gray-900 group-hover:text-primary transition-colors mb-2">
        {domain.name}
      </h3>
      <p class="text-lg text-primary-dark font-medium">
        {content.tagline}
      </p>
    </div>
    
    <!-- 描述 -->
    <p class="text-gray-600 mb-4 line-clamp-3">
      {content.description}
    </p>
    
    <!-- 分类和状态 -->
    <div class="flex flex-wrap items-center gap-2 mb-4">
      <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
        {domain.category}
      </span>
      <span class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${statusStyles[domain.status]}`}>
        {statusText}
      </span>
    </div>
    
    <!-- 查看详情按钮 -->
    <div class="flex items-center text-primary font-medium group-hover:text-primary-dark transition-colors">
      <span>{t.cta.viewDetails}</span>
      <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
      </svg>
    </div>
  </a>
  
  <!-- 悬停效果：渐变边框 -->
  <div class="absolute inset-0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none">
    <div class="absolute inset-0 rounded-xl bg-gradient-to-r from-gradient-start to-gradient-end opacity-10"></div>
  </div>
</div>

<script>
  import { analytics } from '../utils/analytics';

  document.addEventListener('DOMContentLoaded', () => {
    const domainCards = document.querySelectorAll('.domain-card-link');
    domainCards.forEach(card => {
      card.addEventListener('click', () => {
        const domainName = card.getAttribute('data-domain') || '';
        analytics.trackDomainInterest(domainName, 'Domain Card');
      });
    });
  });
</script>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
